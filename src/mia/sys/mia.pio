/*
 * Copyright (c) 2023 Rumbledethumps
 * Copyright (c) 2024 Sodiumlightbaby
 *
 * SPDX-License-Identifier: BSD-3-Clause
 */

; Action sends a FIFO message for every read or write to a page
; Action loop in mia.c decides on fine grained handling
; Page address to compare is stored in y at init
.program mia_action

start:
    wait 1 gpio 25  [31]
.wrap_target
    wait 0 gpio 25  [15] ;wait for phi2 negative edge + setup
    nop             [0]  ;<- act read timing adjust 0-31
    mov osr pins
    out null 8           ;Spool out A[7:0]
    out x 8              ;Get page address A[15:8]
    jmp x!=y start
    in pins 25           ;Get RnW,D[7:0]:A[15:0] (autopush) read - data ignored in action loop
    jmp pin iswrite      ;Handle writes later
    jmp start            ;
iswrite:                 ;Writes needs data to be stable (phi2 high)
    wait 1 gpio 25  [20] ;Delay needed for stable data sampling 
    nop             [0]  ;<- act write timing adjust 0-31
    in pins 25      [15] ;Get RnW,D[7:0]:A[15:0] (autopush)
.wrap

; Async ROM and IO data read emulation
; Pindirs and OE is selectively enabled in io_read/rom_read progs
; then always dislabled here
; ROM cortex base addr in y
; IO data is pushed to output FIFO from action loop
; NB 16kB aliasing happends  

.program mia_read_data
.wrap_target
    out pins 8               ;output Data (auto-pull)
.wrap

.program mia_read_addr
isrom:
    in pins 14           [7] ;input address (auto-push)   
.wrap_target
    wait 1 gpio 25       [7] ;wait for phi2 raising edge
    pull noblock         [7]
    ;mov x osr
    out x 32             [7] ;same as <mov x osr> but clears osr for later use as zero
    wait 0 gpio 25       [7] ;wait for phi2 falling edge + A setup-time
    out pindirs 8            ;disable data output
    set pins 1           [6]
    mov isr x           [14] ; ROM page cortex base address
    nop                  [0] ;<- read addr timing adjust 0-14 (0-7 + 0-7)
    jmp pin isrom            ; Test A[15] 0=IO 1=ROM
.wrap

;Waits for action loop in mia.c signaling read enable of data this cycle
.program mia_io_read

.wrap_target
start:
    irq wait 5               ;wait on CPU signaling 
    mov osr !null            ;prepare indirs
    wait 1 gpio 25       [7] ;wait for phi2 raising edge
    nop                  [0] ;<-io read timing adjust 0-7
    set pins 0
    out pindirs 8            ;enable data output
.wrap


;Enabling 16kB ROM area reads
;Address top bits are compared
.program mia_rom_read

.wrap_target
start:
    wait 0 gpio 25      [7]  ;wait for phi2 falling edge
    wait 1 gpio 25      [6]  ;wait for phi2 raising edge
    jmp pin start            ;RnW inverted. Pass on Read
    mov osr pins
    out null 6
    out y 2
    jmp x!=y start           ;pass if y=3 
    out null 9               ;spool out RnW,D[7:0]
    out y 3                  ;collect MAP,DIR,Phi2
    jmp x!=y start           ;if not MAP,DIR,Phi2 right then jump to start
    mov osr !null       [0]  ;prepare pindirs = 0xff
    set pins 0
    out pindirs 8            ;enable data output and DIR B->A. disabled in mia_io_read
.wrap

; Oric MAP signal timing
; Active for A[15:13]=X
.program mia_map

start:
    wait 1 gpio 25     [31]
.wrap_target
    wait 0 gpio 25     [31]  ;wait for phi2 falling edge + A setup-time
    mov osr !pins            ;prepare for IRQ trap (no map for 0xFFFC-0xFFFF)
    mov y !null              ;<<- changed in ext.c to "out y 14" when IRQ trap is on
                             ; 0xa04b, //  3: mov    y, !null         ;trap off          
                             ; 0x604e, //  3: out    y, 14            ;trap on          
    jmp !y start             ;jump if zero
    mov osr pins             ;ca 70 cycles delay before setting MAP
    out y 3            [20]  ;get A[15:13]
    jmp x!=y start     [10]  ;check matching address <- MAP/RV1 timing adjust 0-31
    ;nop                [10]  ;
ismap:
    set pins 1         [30]  ;Delay equals MAP pulse width
    set pins 0  
.wrap

;; Enable "shadow" writing of the lower 1kB of Oric RAM also in XRAM
;.program mia_write
;
;.wrap_target
;start:
;    wait 0 gpio 25 [20] ;wait for phi2 falling edge
;    mov isr x           ;xram access base address in x
;    wait 1 gpio 25  [20];
;    jmp pin write_init  ;RnW inverted Read=0 Write=1
;    jmp start
;
;write_init:
;    mov osr pins        ;sample pins when data is stable
;    out y 14            ;get A[13:0]
;    in y 14             ;get rest of address
;    out y 2             ;get A[15:14]
;    jmp y-- start       ;jump if not zero
;    push noblock        ;address to FIFO
;    out isr 8           ;collect data
;    push noblock        ;Data to FIFO
;.wrap

; Snooping ULA first read cycle for mode status
; 0x18>>3 in X
.program mia_ula

.wrap_target
    wait 0 gpio 25 [30] ;wait for phi2 falling edge
    nop            [10] ;need ca 50 cycles delay
    mov osr pins        ;sample data D[6:0]
    out null 3          ;drop D[2:0]
    out y 4             ;collect D[6:3]
    jmp x!=y skip       ;skip if not mode attribute (0x18)
    in pins 8           ;autopush D[7:0]
skip:
    wait 1 gpio 25 [31] ;wait for phi2 raising edge
.wrap
